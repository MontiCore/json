/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */


grammar JSON4Graph extends JSON {

  /** The starting nonterminal. */
  start JSONDocument;

  /** An ASTJSONObject is a JSONValue that may contain further properties.
    @attribute props The properties of the JSON document.
  */
  JSONObject implements JSONValue = "{" 
      "\"ID\"" ":" id:StringLiteral
      ("," prop:JSONProperty)* 
  "}";
  
  JSONReference extends JSONProperty = "@" key:StringLiteral ":" reference:StringLiteral;

  astrule JSONReference =
    method public  json._ast.ASTJSONValue getValue ()  {
      if (this.value==null) {
        json4graph._visitor.JSON4GraphObjectVisitor.getInstance().getReferenceValue(getReference());
      }      
      return this.value;
    };
}
