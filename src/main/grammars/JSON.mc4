/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */


grammar JSON extends de.monticore.MCCommonLiterals {

  /** An ASTJSONDocument represents an input file in JSON format.
    @attribute jSONObjects The objects contained in the JSON document.
  */
  scope JSONDocument = object:JSONObject* | "[" object:(JSONObject || ",")* "]";

  /** An ASTJSONObject is a JSONValue that may contain further properties.
    @attribute props The properties of the JSON document.
  */
  scope JSONObject implements JSONValue = "{" prop:(JSONProperty || ",")* "}";

  /** An ASTJSONProperty represents elements in a key-value relationship.
    @attribute key The unique identifier of a property.
    @attribute value The property value associated with the identifier.
  */
  JSONProperty = key:StringLiteral ":" value:JSONValue;

  /** An ASTJSONValue represents an arbitrary property value. */
  interface JSONValue;

  /** An ASTJSONBoolean represents a boolean property value.
    @attribute value The actual value.
  */
  JSONBoolean implements JSONValue = value:BooleanLiteral;

  /** An ASTJSONString represents a String property value.
    @attribute value The actual value.
  */
  JSONString implements JSONValue = value:StringLiteral;

  /** An ASTJSONNumber represents a number property value.
    @attribute value The actual value (as signed integer or double).
  */
  JSONNumber implements JSONValue = value:SignedNumericLiteral;

  /** An ASTJSONArray represents an array of multiple property values.
    @attribute values The values in the array.
  */
  scope JSONArray implements JSONValue = "[" value:(JSONValue || ",")* "]";

  /** An ASTJSONNull represents an empty property value.
    @attribute value The actual "null" value.
  */
  JSONNull implements JSONValue = value:NullLiteral;
}
